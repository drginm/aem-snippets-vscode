{
    "Class - AEM Mocks - JUnit - Sling Model": {
        "prefix": ["sling.model.junit.mocks.class", "smjumc"],
        "body": [
            "package ${1:com.company.aem.core.models};",
            "",
            "import org.apache.commons.lang3.StringUtils;",
            "import org.apache.sling.api.resource.Resource;",
            "import org.junit.jupiter.api.BeforeEach;",
            "import org.junit.jupiter.api.Test;",
            "import org.junit.jupiter.api.extension.ExtendWith;",
            "",
            "import com.day.cq.wcm.api.Page;",
            "import io.wcm.testing.mock.aem.junit5.AemContext;",
            "import io.wcm.testing.mock.aem.junit5.AemContextExtension;",
            "",
            "import static org.junit.jupiter.api.Assertions.assertNotNull;",
            "import static org.junit.jupiter.api.Assertions.assertTrue;",
            "import static org.junit.jupiter.api.Assertions.assertEquals;",
            "",
            "@ExtendWith(AemContextExtension.class)",
            "class ${2:${TM_FILENAME_BASE}} {",
                "\t$0",
            "}"
        ],
        "description": "Class - AEM Mocks - JUnit - Sling Model"
    },
    "BeforeEach - AEM Mocks - JUnit - Sling Model": {
        "prefix": ["sling.model.junit.mocks.beforeEach", "smjumbe"],
        "body": [
            "@BeforeEach",
            "public void ${1:setup}(AemContext context) throws Exception {",
                "",
            "}"
        ],
        "description": "BeforeEach - AEM Mocks - JUnit - Sling Model"
    },
    "Load Json - AEM Mocks - JUnit - Sling Model": {
        "prefix": ["sling.model.junit.mocks.loadJson", "smjumlj"],
        "body": [
            "context.load().json(\"${1:/com/mysite/core/models/MyTest.json}\", \"${2:/content/myotherpage}\");"
        ],
        "description": "Load Json - AEM Mocks - JUnit - Sling Model"
    },
    "Create Resource - AEM Mocks - JUnit - Sling Model": {
        "prefix": ["sling.model.junit.mocks.createResource", "smjumcr"],
        "body": [
            "private Page page;",
            "private Resource resource;",
            "",
            "page = context.create().page(\"${1:/content/mypage}\");",
            "resource = context.create().resource(page, \"${2:nodeName}\", ImmutableMap.<String, Object>builder()",
                "\t.put(\"sling:resourceType\", \"${3:\"my-app/components/my-component\"}\")",
                "\t.put(\"${4:propertyName}\", \"${5:|\"propertyValue\",true,0|}\")",
                "\t.build());",
            "",
            "${6:ComponentModel} ${7:variable} = resource.adaptTo($6.class);"
        ],
        "description": "Create Resource - AEM Mocks - JUnit - Sling Model"
    },
    "Empty Test - AEM Mocks - JUnit - Sling Model": {
        "prefix": ["sling.model.junit.mocks.test", "smjumet"],
        "body": [
            "@Test",
            "void ${1:testMethod}() throws Exception {",
                "\t$0",
            "}"
        ],
        "description": "Empty Test - AEM Mocks - JUnit - Sling Model"
    },
    "Test with Json - AEM Mocks - JUnit - Sling Model": {
        "prefix": ["sling.model.junit.mocks.class", "smjumtj"],
        "body": [
            "@Test",
            "void ${1:testMethod}(AemContext context) throws Exception {",
                "\tcontext.currentResource(\"${2:/content/myotherpage/nodeName}\");",
                "",
                "\t${3:ComponentModel} byline = context.${4:|request,currentResource|}().adaptTo($3.class);",
                "\tfinal String expected = \"Something!\";",
                "",
                "\tString msg = byline.get${5:PropertyName}();",
                "\tassertNotNull(msg);",
                "\tassertEquals(expected, msg);",
            "}"
        ],
        "description": "Test with Json - AEM Mocks - JUnit - Sling Model"
    },
    "Assert Contains - AEM Mocks - JUnit - Sling Model": {
        "prefix": ["sling.model.junit.assert.contains", "smjuac"],
        "body": [
            "assertTrue(StringUtils.contains(${1:variableToCheck}, ${2:dataSource}));"
        ],
        "description": "Assert Contains - AEM Mocks - JUnit - Sling Model"
    }
}
